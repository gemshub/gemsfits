01. main.cpp(108). Creating new TGfitTask
02. data_manager.cpp(51). Reading database parameter get_db_specs(); 
03. data_manager.cpp(55). Getting data form the EJDB database; 
05. data_manager.cpp(365). Adding the data returned by the selection query into the data structure; 
04. data_manager.cpp(58). Getting distinct T and P pairs; 
09. optimization.cpp(48). Reading NLopt optimization settings from the input file; 
10. gemsfit_task.cpp(94). Initializing the Target function structure & get_DatTarget(); 
06. gemsfit_task.cpp(89). Initializing nodes with the experimental data; 
07. gemsfit_task.cpp(92). Initializing optimization structure; 
11. gemsfit_task.cpp(152). Initializing optimization init_optim(); 
 ... initializing optimization object in build_optim() ... 
 ... performing parameter normalization ... 
     Init guess [0] = -6.20514e+06
     Upper Bound old [0]= -6.15514e+06
     Upper Bound new [0]= -0.991942
     Init guess [1] = -5.32193e+06
     Upper Bound old [1]= -5.27193e+06
     Upper Bound new [1]= -0.990605
     Init guess [2] = -5.35053e+06
     Upper Bound old [2]= -5.30053e+06
     Upper Bound new [2]= -0.990655
     Init guess [3] = -4.45751e+06
     Upper Bound old [3]= -4.40751e+06
     Upper Bound new [3]= -0.988783
     Init guess [4] = -6.01485e+06
     Upper Bound old [4]= -5.96485e+06
     Upper Bound new [4]= -0.991687
     Init guess [5] = -5.11784e+06
     Upper Bound old [5]= -5.06784e+06
     Upper Bound new [5]= -0.99023
     Init guess [6] = -5.16424e+06
     Upper Bound old [6]= -5.11424e+06
     Upper Bound new [6]= -0.990318
     Init guess [7] = -4.25882e+06
     Upper Bound old [7]= -4.20882e+06
     Upper Bound new [7]= -0.98826
     Init guess [0] = -6.20514e+06
     Lower Bound old [0]= -6.25514e+06
     Lower Bound new [0]= -1.00806
     Init guess [1] = -5.32193e+06
     Lower Bound old [1]= -5.37193e+06
     Lower Bound new [1]= -1.0094
     Init guess [2] = -5.35053e+06
     Lower Bound old [2]= -5.40053e+06
     Lower Bound new [2]= -1.00934
     Init guess [3] = -4.45751e+06
     Lower Bound old [3]= -4.50751e+06
     Lower Bound new [3]= -1.01122
     Init guess [4] = -6.01485e+06
     Lower Bound old [4]= -6.06485e+06
     Lower Bound new [4]= -1.00831
     Init guess [5] = -5.11784e+06
     Lower Bound old [5]= -5.16784e+06
     Lower Bound new [5]= -1.00977
     Init guess [6] = -5.16424e+06
     Lower Bound old [6]= -5.21424e+06
     Lower Bound new [6]= -1.00968
     Init guess [7] = -4.25882e+06
     Lower Bound old [7]= -4.30882e+06
     Lower Bound new [7]= -1.01174
... assigning bounds and tolerance for optimization...

12. in gemsfit_task.cpp(287). Setting target (objective) function to minimize.
13. gemsfit_task.cpp(308). Performing optimization.
~ m.count.= 1 sum.res.= 2.98127898547199
optv[0] = -1
size of optv = 8
14. gemsfit_task.cpp(317). Finished optimization; 
~ m.count.= 2 sum.res.= 2.98128538831608
found minimum at <<f( -1 -1 -1 -1 -1 -1 -1 -1 ) = 2.98127898547199
 after 2 evaluations.

15. Back in main.cpp(122). Performing statistics ...
~ m.count.= 3 sum.res.= 2.98122208400572
~ m.count.= 4 sum.res.= 2.98141978534835
~ m.count.= 5 sum.res.= 2.91675448134484
~ m.count.= 6 sum.res.= 3.03834438121229
~ m.count.= 7 sum.res.= 2.9912339383107
~ m.count.= 8 sum.res.= 2.97304808905011
~ m.count.= 9 sum.res.= 3.06109045995012
~ m.count.= 10 sum.res.= 2.90879469761554
~ m.count.= 11 sum.res.= 2.98122811546942
~ m.count.= 12 sum.res.= 2.98143268715837
~ m.count.= 13 sum.res.= 3.23506272639517
~ m.count.= 14 sum.res.= 2.85029870251299
~ m.count.= 15 sum.res.= 2.98143871177803
~ m.count.= 16 sum.res.= 2.98117745155773
~ m.count.= 17 sum.res.= 2.76545554805795
~ m.count.= 18 sum.res.= 3.27001925241984
~ m.count.= 19 sum.res.= 2.98127898547199
16. main.cpp(152): finished in 2.150759 seconds. GEMSFITS: End. Bye!
