01. main.cpp(108). Creating new TGfitTask
02. data_manager.cpp(51). Reading database parameter get_db_specs(); 
03. data_manager.cpp(55). Getting data form the EJDB database; 
05. data_manager.cpp(365). Adding the data returned by the selection query into the data structure; 
04. data_manager.cpp(58). Getting distinct T and P pairs; 
09. optimization.cpp(48). Reading NLopt optimization settings from the input file; 
10. gemsfit_task.cpp(94). Initializing the Target function structure & get_DatTarget(); 
06. gemsfit_task.cpp(89). Initializing nodes with the experimental data; 
07. gemsfit_task.cpp(92). Initializing optimization structure; 
11. gemsfit_task.cpp(152). Initializing optimization init_optim(); 
 ... initializing optimization object in build_optim() ... 
 ... performing parameter normalization ... 
     Init guess [0] = -899506
     Upper Bound old [0]= -889506
     Upper Bound new [0]= -0.988883
     Init guess [1] = -1.10174e+006
     Upper Bound old [1]= -1.09174e+006
     Upper Bound new [1]= -0.990923
     Init guess [2] = -1.30581e+006
     Upper Bound old [2]= -1.29581e+006
     Upper Bound new [2]= -0.992342
     Init guess [3] = -487478
     Upper Bound old [3]= -477478
     Upper Bound new [3]= -0.979486
     Init guess [0] = -899506
     Lower Bound old [0]= -909506
     Lower Bound new [0]= -1.01112
     Init guess [1] = -1.10174e+006
     Lower Bound old [1]= -1.11174e+006
     Lower Bound new [1]= -1.00908
     Init guess [2] = -1.30581e+006
     Lower Bound old [2]= -1.31581e+006
     Lower Bound new [2]= -1.00766
     Init guess [3] = -487478
     Lower Bound old [3]= -497478
     Lower Bound new [3]= -1.02051
... assigning bounds and tolerance for optimization...

12. in gemsfit_task.cpp(287). Setting target (objective) function to minimize.
13. gemsfit_task.cpp(308). Performing optimization.
~ m.count.= 1 sum.res.= 6.23952923125743
optv[0] = -1
size of optv = 4
14. gemsfit_task.cpp(317). Finished optimization; 
~ m.count.= 2 sum.res.= 6.23963157386036
found minimum at <<f( -1 -1 -1 -1 ) = 6.23952923125743
 after 2 evaluations.

15. Back in main.cpp(122). Performing statistics ...
~ m.count.= 3 sum.res.= 6.20012170907843
~ m.count.= 4 sum.res.= 6.27950294572762
~ m.count.= 5 sum.res.= 6.218688705667
~ m.count.= 6 sum.res.= 6.25985089223415
~ m.count.= 7 sum.res.= 5.98095927822138
~ m.count.= 8 sum.res.= 6.51538079646171
~ m.count.= 9 sum.res.= 6.33108466320616
~ m.count.= 10 sum.res.= 6.15047424534683
~ m.count.= 11 sum.res.= 6.24019739694929
16. main.cpp(152): finished in 1.665066 seconds. GEMSFITS: End. Bye!
