01. main.cpp(108). Creating new TGfitTask
02. data_manager.cpp(51). Reading database parameter get_db_specs(); 
03. data_manager.cpp(55). Getting data form the EJDB database; 
05. data_manager.cpp(365). Adding the data returned by the selection query into the data structure; 
04. data_manager.cpp(58). Getting distinct T and P pairs; 
09. optimization.cpp(48). Reading NLopt optimization settings from the input file; 
10. gemsfit_task.cpp(94). Initializing the Target function structure & get_DatTarget(); 
06. gemsfit_task.cpp(89). Initializing nodes with the experimental data; 
07. gemsfit_task.cpp(92). Initializing optimization structure; 
11. gemsfit_task.cpp(152). Initializing optimization init_optim(); 
 ... initializing optimization object in build_optim() ... 
 ... performing parameter normalization ... 
     Init guess [0] = -899506
     Upper Bound old [0]= -889506
     Upper Bound new [0]= -0.988883
     Init guess [1] = -1.10174e+06
     Upper Bound old [1]= -1.09174e+06
     Upper Bound new [1]= -0.990923
     Init guess [2] = -1.30581e+06
     Upper Bound old [2]= -1.29581e+06
     Upper Bound new [2]= -0.992342
     Init guess [3] = -487478
     Upper Bound old [3]= -477478
     Upper Bound new [3]= -0.979486
     Init guess [4] = -1.10617e+06
     Upper Bound old [4]= -1.09617e+06
     Upper Bound new [4]= -0.99096
     Init guess [0] = -899506
     Lower Bound old [0]= -909506
     Lower Bound new [0]= -1.01112
     Init guess [1] = -1.10174e+06
     Lower Bound old [1]= -1.11174e+06
     Lower Bound new [1]= -1.00908
     Init guess [2] = -1.30581e+06
     Lower Bound old [2]= -1.31581e+06
     Lower Bound new [2]= -1.00766
     Init guess [3] = -487478
     Lower Bound old [3]= -497478
     Lower Bound new [3]= -1.02051
     Init guess [4] = -1.10617e+06
     Lower Bound old [4]= -1.11617e+06
     Lower Bound new [4]= -1.00904
... assigning bounds and tolerance for optimization...

12. in gemsfit_task.cpp(287). Setting target (objective) function to minimize.
13. gemsfit_task.cpp(308). Performing optimization.
~ m.count.= 1 sum.res.= 5.5915123252653
~ m.count.= 2 sum.res.= 6.88110376895154
~ m.count.= 3 sum.res.= 6.62582976729095
~ m.count.= 4 sum.res.= 30.2098089549079
~ m.count.= 5 sum.res.= 9.14795909295846
~ m.count.= 6 sum.res.= 5.59213957937006
~ m.count.= 7 sum.res.= 5.89937906647886
~ m.count.= 8 sum.res.= 4.00869591933837
~ m.count.= 9 sum.res.= 12.3601491717813
~ m.count.= 10 sum.res.= 32.8554530012484
~ m.count.= 11 sum.res.= 5.5912851672091
~ m.count.= 12 sum.res.= 4.4165554452788
~ m.count.= 13 sum.res.= 1.48146969862112
~ m.count.= 14 sum.res.= 1.57185385169152
~ m.count.= 15 sum.res.= 1.70439889705586
~ m.count.= 16 sum.res.= 1.53316153283476
~ m.count.= 17 sum.res.= 1.70209692400434
~ m.count.= 18 sum.res.= 1.33749194177965
~ m.count.= 19 sum.res.= 1.1964274555659
~ m.count.= 20 sum.res.= 1.27122859973006
~ m.count.= 21 sum.res.= 1.25624432232927
~ m.count.= 22 sum.res.= 1.17922598548163
~ m.count.= 23 sum.res.= 1.17103293870261
~ m.count.= 24 sum.res.= 1.16906260492213
~ m.count.= 25 sum.res.= 1.30730668404429
~ m.count.= 26 sum.res.= 1.12357248808493
~ m.count.= 27 sum.res.= 1.13096791653295
~ m.count.= 28 sum.res.= 1.13417419667629
~ m.count.= 29 sum.res.= 1.12445322759136
~ m.count.= 30 sum.res.= 1.15857455543278
~ m.count.= 31 sum.res.= 1.11927241327129
~ m.count.= 32 sum.res.= 1.12073879566258
~ m.count.= 33 sum.res.= 1.17958932745282
~ m.count.= 34 sum.res.= 1.15722395722797
~ m.count.= 35 sum.res.= 1.11598778122483
~ m.count.= 36 sum.res.= 1.11714370591076
~ m.count.= 37 sum.res.= 1.1167894235067
~ m.count.= 38 sum.res.= 1.11714232485211
~ m.count.= 39 sum.res.= 1.12227267759583
~ m.count.= 40 sum.res.= 1.11675655498501
~ m.count.= 41 sum.res.= 1.11639225661998
~ m.count.= 42 sum.res.= 1.11737741356056
~ m.count.= 43 sum.res.= 1.11720087684523
~ m.count.= 44 sum.res.= 1.1167781460397
~ m.count.= 45 sum.res.= 1.11645238376411
~ m.count.= 46 sum.res.= 1.11709244658735
~ m.count.= 47 sum.res.= 1.11656868963924
~ m.count.= 48 sum.res.= 1.11676929832865
~ m.count.= 49 sum.res.= 1.11614091706698
optv[0] = -1.00160124937473
size of optv = 5
14. gemsfit_task.cpp(317). Finished optimization; 
~ m.count.= 50 sum.res.= 1.11690685270628
found minimum at <<f( -1.00160124937473 -1.00427472441738 -1.00090042382008 -0.995831351704334 -1.00061942209451 ) = 1.11598778122483
 after 50 evaluations.

15. Back in main.cpp(122). Performing statistics ...
~ m.count.= 51 sum.res.= 1.11681314585289
~ m.count.= 52 sum.res.= 1.11794150694356
~ m.count.= 53 sum.res.= 1.11781541199281
~ m.count.= 54 sum.res.= 1.11789918642564
~ m.count.= 55 sum.res.= 1.12753591011424
~ m.count.= 56 sum.res.= 1.12718378636746
~ m.count.= 57 sum.res.= 1.11967158146253
~ m.count.= 58 sum.res.= 1.1164085874173
~ m.count.= 59 sum.res.= 1.1166060026507
~ m.count.= 60 sum.res.= 1.1169120399831
~ m.count.= 61 sum.res.= 1.11663877473707
16. main.cpp(152): finished in 21.586163 seconds. GEMSFITS: End. Bye!
