01. main.cpp(108). Creating new TGfitTask
02. data_manager.cpp(51). Reading database parameter get_db_specs(); 
03. data_manager.cpp(55). Getting data form the EJDB database; 
05. data_manager.cpp(365). Adding the data returned by the selection query into the data structure; 
04. data_manager.cpp(58). Getting distinct T and P pairs; 
09. optimization.cpp(48). Reading NLopt optimization settings from the input file; 
10. gemsfit_task.cpp(94). Initializing the Target function structure & get_DatTarget(); 
06. gemsfit_task.cpp(89). Initializing nodes with the experimental data; 
07. gemsfit_task.cpp(92). Initializing optimization structure; 
11. gemsfit_task.cpp(152). Initializing optimization init_optim(); 
 ... initializing optimization object in build_optim() ... 
 ... performing parameter normalization ... 
     Init guess [0] = 60300
     Upper Bound old [0]= 70300
     Upper Bound new [0]= 1.16584
     Init guess [1] = -1.17
     Upper Bound old [1]= 0.5
     Upper Bound new [1]= 0.42735
     Init guess [2] = 1.79
     Upper Bound old [2]= 2.5
     Upper Bound new [2]= 1.39665
     Init guess [0] = 60300
     Lower Bound old [0]= 50300
     Lower Bound new [0]= 0.834163
     Init guess [1] = -1.17
     Lower Bound old [1]= -1.9
     Lower Bound new [1]= -1.62393
     Init guess [2] = 1.79
     Lower Bound old [2]= 1
     Lower Bound new [2]= 0.558659
... assigning bounds and tolerance for optimization...

12. in gemsfit_task.cpp(287). Setting target (objective) function to minimize.
13. gemsfit_task.cpp(308). Performing optimization.
~ m.count.= 1 sum.res.= 0.0110886386576814
~ m.count.= 2 sum.res.= 0.152218278981765
~ m.count.= 3 sum.res.= 0.0155277716697034
~ m.count.= 4 sum.res.= 0.146367189528234
~ m.count.= 5 sum.res.= 0.117874713596228
~ m.count.= 6 sum.res.= 0.0109921430390021
~ m.count.= 7 sum.res.= 0.107180835721769
~ m.count.= 8 sum.res.= 0.0128653352020684
~ m.count.= 9 sum.res.= 0.0114969205551216
~ m.count.= 10 sum.res.= 0.0126696437424249
~ m.count.= 11 sum.res.= 0.0125851479736909
~ m.count.= 12 sum.res.= 0.0111084403959544
~ m.count.= 13 sum.res.= 0.0105572110973876
~ m.count.= 14 sum.res.= 0.0110777823573588
~ m.count.= 15 sum.res.= 0.0118437825460404
~ m.count.= 16 sum.res.= 0.0104981520855631
~ m.count.= 17 sum.res.= 0.010437130133398
~ m.count.= 18 sum.res.= 0.0104646459264189
~ m.count.= 19 sum.res.= 0.0104223649566068
~ m.count.= 20 sum.res.= 0.0104144743127834
~ m.count.= 21 sum.res.= 0.0104066795341433
~ m.count.= 22 sum.res.= 0.010393322956213
~ m.count.= 23 sum.res.= 0.0103741046771706
~ m.count.= 24 sum.res.= 0.010346469241715
~ m.count.= 25 sum.res.= 0.0103329423564332
~ m.count.= 26 sum.res.= 0.0102912550376746
~ m.count.= 27 sum.res.= 0.0102769315134266
~ m.count.= 28 sum.res.= 0.0102489923238369
~ m.count.= 29 sum.res.= 0.0102522197271193
~ m.count.= 30 sum.res.= 0.0103051137251707
~ m.count.= 31 sum.res.= 0.0102316407927899
~ m.count.= 32 sum.res.= 0.0102390889162518
~ m.count.= 33 sum.res.= 0.0103068810280685
~ m.count.= 34 sum.res.= 0.0102369520399006
~ m.count.= 35 sum.res.= 0.0102421068801464
~ m.count.= 36 sum.res.= 0.0102405223780584
~ m.count.= 37 sum.res.= 0.0102309537278941
~ m.count.= 38 sum.res.= 0.0102305158368804
~ m.count.= 39 sum.res.= 0.010229969045104
~ m.count.= 40 sum.res.= 0.0102404417291677
~ m.count.= 41 sum.res.= 0.0102397348840977
~ m.count.= 42 sum.res.= 0.0102349305058451
~ m.count.= 43 sum.res.= 0.0102325841199726
~ m.count.= 44 sum.res.= 0.0102262356713066
~ m.count.= 45 sum.res.= 0.0102266605200553
~ m.count.= 46 sum.res.= 0.0102254001239831
~ m.count.= 47 sum.res.= 0.010230977944609
~ m.count.= 48 sum.res.= 0.0102311271366942
~ m.count.= 49 sum.res.= 0.010225787443782
~ m.count.= 50 sum.res.= 0.0102275019368231
~ m.count.= 51 sum.res.= 0.0102271613171278
~ m.count.= 52 sum.res.= 0.0102263792372319
~ m.count.= 53 sum.res.= 0.0102289858637697
~ m.count.= 54 sum.res.= 0.0102299821960154
~ m.count.= 55 sum.res.= 0.0102259069950984
~ m.count.= 56 sum.res.= 0.0102254032235588
~ m.count.= 57 sum.res.= 0.0102265387709158
~ m.count.= 58 sum.res.= 0.010225874534152
~ m.count.= 59 sum.res.= 0.0102264705175572
~ m.count.= 60 sum.res.= 0.0102258715992889
~ m.count.= 61 sum.res.= 0.0102262675833794
~ m.count.= 62 sum.res.= 0.0102275456845642
~ m.count.= 63 sum.res.= 0.0102247928329908
~ m.count.= 64 sum.res.= 0.0102263096608716
~ m.count.= 65 sum.res.= 0.0102269915800435
~ m.count.= 66 sum.res.= 0.0102268416953289
~ m.count.= 67 sum.res.= 0.0102259743608045
~ m.count.= 68 sum.res.= 0.0102260845346868
~ m.count.= 69 sum.res.= 0.0102257178442372
~ m.count.= 70 sum.res.= 0.0102274614369549
~ m.count.= 71 sum.res.= 0.0102252185712899
~ m.count.= 72 sum.res.= 0.0102268839132137
~ m.count.= 73 sum.res.= 0.0102260915766466
~ m.count.= 74 sum.res.= 0.0102271964530765
~ m.count.= 75 sum.res.= 0.0102247410913456
~ m.count.= 76 sum.res.= 0.0102259233725045
~ m.count.= 77 sum.res.= 0.010227034427876
~ m.count.= 78 sum.res.= 0.0102278567881493
~ m.count.= 79 sum.res.= 0.0102274602188541
optv[0] = 1.01169624946999
size of optv = 3
14. gemsfit_task.cpp(317). Finished optimization; 
~ m.count.= 80 sum.res.= 0.0102247410913456
found minimum at <<f( 1.01169624946999 -1.34261073631745 0.971531015511237 ) = 0.0102247410913456
 after 80 evaluations.

15. Back in main.cpp(122). Performing statistics ...
~ m.count.= 81 sum.res.= 0.0102309792521539
~ m.count.= 82 sum.res.= 0.010229381495535
~ m.count.= 83 sum.res.= 0.010223793617836
~ m.count.= 84 sum.res.= 0.0102257479460606
~ m.count.= 85 sum.res.= 0.0102264868665298
~ m.count.= 86 sum.res.= 0.010229775561829
~ m.count.= 87 sum.res.= 0.0102247410913456
16. main.cpp(152): finished in 0.26877 seconds. GEMSFITS: End. Bye!
