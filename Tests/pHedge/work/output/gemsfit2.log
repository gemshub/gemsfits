01. main.cpp(108). Creating new TGfitTask
02. data_manager.cpp(51). Reading database parameter get_db_specs(); 
03. data_manager.cpp(55). Getting data form the EJDB database; 
05. data_manager.cpp(365). Adding the data returned by the selection query into the data structure; 
04. data_manager.cpp(58). Getting distinct T and P pairs; 
09. optimization.cpp(48). Reading NLopt optimization settings from the input file; 
10. gemsfit_task.cpp(94). Initializing the Target function structure & get_DatTarget(); 
06. gemsfit_task.cpp(89). Initializing nodes with the experimental data; 
07. gemsfit_task.cpp(92). Initializing optimization structure; 
11. gemsfit_task.cpp(152). Initializing optimization init_optim(); 
 ... initializing optimization object in build_optim() ... 
 ... performing parameter normalization ... 
     Init guess [0] = -1.94046e+06
     Upper Bound old [0]= -1.93046e+06
     Upper Bound new [0]= -0.994847
     Init guess [1] = -1.39777e+06
     Upper Bound old [1]= -1.38777e+06
     Upper Bound new [1]= -0.992846
     Init guess [2] = -1.58055e+06
     Upper Bound old [2]= -1.57055e+06
     Upper Bound new [2]= -0.993673
     Init guess [0] = -1.94046e+06
     Lower Bound old [0]= -1.95046e+06
     Lower Bound new [0]= -1.00515
     Init guess [1] = -1.39777e+06
     Lower Bound old [1]= -1.40777e+06
     Lower Bound new [1]= -1.00715
     Init guess [2] = -1.58055e+06
     Lower Bound old [2]= -1.59055e+06
     Lower Bound new [2]= -1.00633
... assigning bounds and tolerance for optimization...

12. in gemsfit_task.cpp(287). Setting target (objective) function to minimize.
13. gemsfit_task.cpp(308). Performing optimization.
~ m.count.= 1 sum.res.= 5.68008488376712
~ m.count.= 2 sum.res.= 6.82568783309204
~ m.count.= 3 sum.res.= 9.94452517539987
~ m.count.= 4 sum.res.= 7.13586400519587
~ m.count.= 5 sum.res.= 3.95492075356225
~ m.count.= 6 sum.res.= 15.1168606984691
~ m.count.= 7 sum.res.= 5.53253599290171
~ m.count.= 8 sum.res.= 9.04161789332801
~ m.count.= 9 sum.res.= 3.15273327235702
~ m.count.= 10 sum.res.= 3.01727120446005
~ m.count.= 11 sum.res.= 3.06945713410702
~ m.count.= 12 sum.res.= 3.02483870038036
~ m.count.= 13 sum.res.= 3.0189434835379
~ m.count.= 14 sum.res.= 3.19670873520677
~ m.count.= 15 sum.res.= 2.96605806814085
~ m.count.= 16 sum.res.= 3.3288614961891
~ m.count.= 17 sum.res.= 2.92153129084303
~ m.count.= 18 sum.res.= 2.9810967899341
~ m.count.= 19 sum.res.= 3.32749269868583
~ m.count.= 20 sum.res.= 2.91156247113117
~ m.count.= 21 sum.res.= 2.9159081847376
~ m.count.= 22 sum.res.= 2.91434370674626
~ m.count.= 23 sum.res.= 2.92588924722943
~ m.count.= 24 sum.res.= 2.91972581497878
~ m.count.= 25 sum.res.= 2.92011455356897
~ m.count.= 26 sum.res.= 2.90810996883331
~ m.count.= 27 sum.res.= 2.90529571539271
~ m.count.= 28 sum.res.= 2.90898086636461
~ m.count.= 29 sum.res.= 2.90611184741795
optv[0] = -1.00267636739958
size of optv = 3
14. gemsfit_task.cpp(317). Finished optimization; 
~ m.count.= 30 sum.res.= 2.90549995649038
found minimum at <<f( -1.00267636739958 -0.999319271098786 -0.997820152200426 ) = 2.90529571539271
 after 30 evaluations.

15. Back in main.cpp(122). Performing statistics ...
~ m.count.= 31 sum.res.= 2.93385359571695
~ m.count.= 32 sum.res.= 2.93678976359034
~ m.count.= 33 sum.res.= 2.91699394919187
~ m.count.= 34 sum.res.= 2.93597766023664
~ m.count.= 35 sum.res.= 2.90529427278639
~ m.count.= 36 sum.res.= 2.90566158315345
~ m.count.= 37 sum.res.= 2.90505073055783
16. main.cpp(152): finished in 55.701865 seconds. GEMSFITS: End. Bye!
