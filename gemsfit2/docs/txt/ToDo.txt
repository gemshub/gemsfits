Roadmap of GEMSFIT2 development

+ completed or partially completed
- to be completed

+ (important!): re-write TGfitTask::setnodes() to avoid hardcoded compounds;
  instead, use name lists of DCs from node-> (DCH file) and TNode access to A matrix and at. masses!
  in perspective (Sveta) to re-use GEMS formula parser class.  

+ add artificial weight column in database in gemsfit2??
+ Re-code the DataTarget parser so each OFUN or NFUN is parsed independent.
+ think and add a unified wieght vector in the OFUN (error weight * Tuckey Weight * Objfun Weight * Absolute wight form wight column)

+ save current code tree to GEMSFIT1013 tag
+ move devDanFit branch to new trunk, clean it up, improve html documentation
+ fork devPhaFit branch from trunk, merge trunk standalone from devPhase standalone
+ check necessary extensions in GEMSFIT2 and cvstoejdb due to extended .IPM file parameter arrays
+ propagate to GEMSFIT2 documentation, wherever necessary    

+ describe/document command line parameters to start gemsfit2 and csvtoejdb utility program
+ check if GEMSFIT input file exists by writing a new template input file (to prevent overwrite)
+ added ooptional CLI parameter for gemsfit2 -init mode (to give a name to input spec. file template)
+ documentation in the GEMSFIT template input file (fitting bulk composition with L linked parameters) 
+ write all possible options the user has for the data to compare
+ implement a "skipsamples" entry in the data query (also symmetric "usesamples")
- see more possible errors and add them to the gemfit_error function
+ problem in csvtoejdb tool when adding the same pair of sample and expdataset - the program should skip it and not add it again to the database.

+ Printing class - printing in /results/FIT_results.csv
+ test inverse weighting more
+ add normalized target function (by average from experimental data)
+ add documentation for normalized target function
+ solid-solution composition as element bulk phase concentration
+ test solid-solution with solchas
+ test the reaction constraint 
+ also test if logk is respected at higher temperatures
+ test interaction parameters

- problems with GEMS convergence - can affect the convergence as BOBYQA - decides how to change parameters based on first residuals

+ type of data to compare (molality and log molality) etc...
+ add density for data to compare.
+ add DMc, fDQF parameters (needs merge from devPhase first)
+ check Tk and P - if implemented
+ make test for Linked parameters - simple pH titration system
+ make test of geobarometry with qtz rutile paper.
+ added phase amount, phase volume, dcomp amount, dcomp activity coeficient
+ added Gex phase property in kJ/mol to target function (Gex: excess Gibbs energy of mixing)
+ not yet added: Eh, osmotic coeficient.
- think about units, how to make a uniform strategy for units.

+ add bulk composition as parameters 
+ work on L (linked) type parameters  

+ look over the statistics !! think about the weighting matrix problem in the Var/Cov calculation.


+ make a separate RUN function in TGfittask so one can access the data manager and calculate statistics before the fitting procedure.
+ make statistics for the reaction dependent parameters as the statistics are fit independent - just add the parameters into the statistics parameter vector.


EJDB database maintenance functionality:
+ try installing ejdb console via nodejs (as given on ejdb.org)
+ the sense of 'collection': as a modeling application project name? as experimental dataset? any other semantics? 
+ backup to JSON text file (the whole DB, one exp.dataset, etc.)
+ restore from JSON text file
+ updating/owerwriting documents e.g. for error corrections in experimental data, adding new information for experimental samples. <= use EJDB command line interface.
- what if one wants to select data from more collections

csvtoejdb documentation:
+ check if arbitrary comp.<formula> works always (formula syntax?)
+ check if unit "mole" and "kJ/mol" work (in addition to "g", "molal", "g/cm3", ...)
+ check in phase properties "Eh" not "eH"
+ check/add phase properties "pe", "oscw", "Gex" in the codes
- calculated_value for osmotic coeficient not implemented
+ fix the issue that a new folder is not created upon initial import of the .csv file. Error: ../gemsfit2/tcejdb/tchdb.c:409:tchdbopen:-:3:file not found:2:No such file or directory 
- fix the issue in csvtoejdb(34,41) about delimiter for getline (in linux \n (\x0A), in mac os \f or \r (\x0D)


+ add different options for monte carlo simulation (add scatter to computed values or measured values or use the actual residuals and randomly add them to the data pg.108)
+ implement the Tukey-Biweight scheme to weight out the outlighers.
+ add option of adding weight for different type of data.
- "dynamic regression run" when some parameters are correlated, with different input file for the different sets of parameters. 1st fits one set with the other fixed, then fits the 2nd with first
	fixed in a loop (unitl ??)
- think about a mode in which the sensitivities of the parameters are computed after each fitting step and the program decides which parameter to keep fixed during the optimization...
        Not possible!!! the NLopt library doesn't allow such dynamic change in the parameter vector!!

+ try to get rid of class opt_vector and add everything in class optimization
- arrange the printing functions in one clear place - now in the statistics functions + make the print possible even if the statistics fails.
- look to simplifiy or generalize all the functions that go trough the OFUN - (residual calculations, MC dataset generation etc.)

+ calculate the contribution of each OFUN term to the total OFUN
- calculate the composite sensitivities for each OFUN term type of observations


+ bootstrap sampling of residuals / measured values
+ intorduce polynomials of the logK dependence as in ReacDC
- check for (input) variable initialization when calling optimization algorithms (esp. global ones)
 to achieve reproducible results for the same task. 

+ JSON format input for Parameters to fit in a similar way as for DataSelect and DataTarget (critical)
+ a way to connect the names (synonims) in the database with the names in the GEMS3K system definition
	- when reading in from the experimental database all comp, species, etc. names. (critical)
+ Short/vs long (self-explanatory) keywords, e.g. "OFUN|ObjectiveFunction"  (potentially important)
- The user is now constrined to be consistent with the key length ( either short either long )
- Improve documentation structure (TOC) and organization of help database, add missing keywords (usability)

- Check cross-compiling of gemsfit2 and gfshell2 with MinGW on linux to produce executable on Windows 7/8 <-- in progress
- Check if it is possible (instead) to pack gfshell2 + gemsfit2 and their dependence libraries into a docker container
- Think how to deploy GEMSFITS package (i.e. prepare the installer) - for future distribution <-- in progress

- To cut gemsfit2 log file when adding it to task results database record (only header and end messages). Critical for DB size (only 2 GB in Windows)
- To re-arrange template output and task definition input so that the parameters and DC names come phase-by-phase.
- To create a new section "OptSet" ("OptimizerSettings") in task definition JSON file for Opt* and Stat* keywords
- To fix documentation html files (to clean up unnecesary files); modify keyword descriptions for "database mode" in gfshell-dbmode.html
  and those for task mode - in gfshell-taskmode.html and/or in gemsfit-useref.html.
- To think/model the directory structure for the GEMSFITS installer (linux, windows) incl. test

Future
- iterative regression
- 2-3 step regrestion: 1 - using global algoritm; 2 - using local algorithm.
- Bayesian linear regression

